{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7fe89f3d_384c2841",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1037775
      },
      "writtenOn": "2024-02-23T13:26:21Z",
      "side": 1,
      "message": "Super cool idea! I\u0027m looking forward to the event.",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff410923_8b6bcab4",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2024-02-23T15:48:59Z",
      "side": 1,
      "message": "Whilst git protocol-level data is now exposed as metrics by Gerrit, such metrics are not per-project.\n\nThe only storage of git protocol-level metrics for git-upload-pack _per project_ that I know of is the sshd_log.\n\nDoes that match your understanding too @luca.milanesio@gmail.com?\n\nIf this is true, effectively it means that we will be blind to projects that are accessed exclusively over HTTP protocol and that we need to choose projects significantly accessed over SSH.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 74
      },
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1b278fa_14a90c77",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-23T16:11:46Z",
      "side": 1,
      "message": "\u003e Whilst git protocol-level data is now exposed as metrics by Gerrit, such metrics are not per-project.\n\u003e \n\u003e The only storage of git protocol-level metrics for git-upload-pack _per project_ that I know of is the sshd_log.\n\u003e \n\u003e Does that match your understanding too @luca.milanesio@gmail.com?\n\u003e \n\u003e If this is true, effectively it means that we will be blind to projects that are accessed exclusively over HTTP protocol and that we need to choose projects significantly accessed over SSH.\n\nThe MVP isn\u0027t implemented yet ðŸ˜Š therefore that\u0027s definitely something we\u0027ll need to  write, pretty much like the rest of the code and algorithms in this MVP.",
      "parentUuid": "ff410923_8b6bcab4",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 74
      },
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4baee593_f3f2a3d0",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1037775
      },
      "writtenOn": "2024-02-23T13:26:21Z",
      "side": 1,
      "message": "Does the team have access to any example data from staging or production environments? Some real-world data (even if it is just for a subset of these measures) would be super useful for training/evaluating the decision models.",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e675b55a_027bfcb6",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-23T13:56:55Z",
      "side": 1,
      "message": "Yes, we do have access to lots of existing historical data on GerritHub, with the repository names redacted of course.",
      "parentUuid": "4baee593_f3f2a3d0",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba90cf04_9bc687f0",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2024-02-23T15:48:59Z",
      "side": 1,
      "message": "Since Gerrithub (and likely other Gerrit installations) serve multiple git repositories, CPU and System utilization metrics at any given observation point will be a function of the _overall_ utilization of the system, not exclusively of the observed repositories.\n\nHow can we measure CPU and system utilization ignoring any other, unrelated factor that might be influencing them (i.e. another GC is happening elsewhere)\n\nI know that both HTTP/SSH logs provide operation-specific metrics (total CPU time to execute command, user-mode CPU time to execute command, memory to execute command), should we measure this metric as opposed to the overall system utilization metrics?",
      "range": {
        "startLine": 50,
        "startChar": 3,
        "endLine": 50,
        "endChar": 59
      },
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dfeca60_6b2fc912",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-23T16:11:46Z",
      "side": 1,
      "message": "\u003e Since Gerrithub (and likely other Gerrit installations) serve multiple git repositories, CPU and System utilization metrics at any given observation point will be a function of the _overall_ utilization of the system, not exclusively of the observed repositories.\n\nYep, and that\u0027s the metric we are interested in. If the system is running slowly, we may NOT want to put more pressure to the system, independently from where the load is coming from.\n\n\u003e How can we measure CPU and system utilization ignoring any other, unrelated factor that might be influencing them (i.e. another GC is happening elsewhere)\n\nWhy? We are interested in the overall system metrics.\n\n\u003e I know that both HTTP/SSH logs provide operation-specific metrics (total CPU time to execute command, user-mode CPU time to execute command, memory to execute command), should we measure this metric as opposed to the overall system utilization metrics?\n\nNo, if the system is struggling, there is no point killing it with a GC activity isn\u0027t it?",
      "parentUuid": "ba90cf04_9bc687f0",
      "range": {
        "startLine": 50,
        "startChar": 3,
        "endLine": 50,
        "endChar": 59
      },
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcd03756_0b50cf83",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-11T09:42:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e675b55a_027bfcb6",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a42c8fa_f727f424",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1037775
      },
      "writtenOn": "2024-02-23T13:26:21Z",
      "side": 1,
      "message": "We will likely need to think about reward/penalty functions to feedback to the learner. Phrased another way, how will we teach the learner that a decision it took had a positive or negative impact? Any thoughts about this?",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c9563e8_0e8e4ba5",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-23T13:56:55Z",
      "side": 1,
      "message": "Yes, indeed. I was thinking about this as a similar scenario of the restocking problem:\n- If you restock a shop, you spend money for buying more products and for renting more space in your warehouse (negative penalty)\n- The restock increases your availability of products and your sales (positive revenue)\n\nHence the overall reward function is revenue - penalty.\n\nSimilarly all the actions on the repository problem:\n- If you run an operation (GC, empty directories removal, bitmap generation) you spend CPU time and lower the overall throughput of the machine (negative penalty for running the action)\n- If your repository has a better filesystem organisation, you spend less time in the different Git protocol phases and increase throughput (positive throughput increase)\n\nHence the overall reward function is throughput increase - penalty of running the action.",
      "parentUuid": "1a42c8fa_f727f424",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7d3c5ea_84ed0d1b",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2024-02-27T18:37:42Z",
      "side": 1,
      "message": "\u003e We will likely need to think about reward/penalty functions to feedback to the learner. Phrased another way, how will we teach the learner that a decision it took had a positive or negative impact? Any thoughts about this?\n\n@shane.mcintosh@uwaterloo.ca I tried to put together a high-level proposal here, Id9bc5d3e, where I also talk about the reward/penalties.\nI am a total newbie to the AI world, so be gentle :P\n\nI will try to put more info there before the hackathon.",
      "parentUuid": "4c9563e8_0e8e4ba5",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f3a43f0_17de1659",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-11T09:42:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b7d3c5ea_84ed0d1b",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "599009bb_118670cd",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1037775
      },
      "writtenOn": "2024-02-23T13:26:21Z",
      "side": 1,
      "message": "I really like the RL idea! In addition, we can experiment with simple rule-based approaches. For example, one approach that jumps to mind is to use [control charts](https://en.wikipedia.org/wiki/Control_chart), which simply take decisions when tracked measures cross critical thresholds. In the worst case, such a rule-based approach would serve as a baseline to which the RL could be compared.",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c70991f7_c54f02db",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-23T13:56:55Z",
      "side": 1,
      "message": "\u003e I really like the RL idea! In addition, we can experiment with simple rule-based approaches. For example, one approach that jumps to mind is to use [control charts](https://en.wikipedia.org/wiki/Control_chart), which simply take decisions when tracked measures cross critical thresholds. In the worst case, such a rule-based approach would serve as a baseline to which the RL could be compared.\n\nExactly, the traditional rule-approach we know it works (Git uses a simple threshold-based decision to run GC automatically); however, we have seen (and paid with our blood in production fires) that the simple rule-based approach isn\u0027t flexible, adaptable and does not take all metrics into consideration.\n\nExample: the auto-gc mechanism may decide to start a full GC of a mono-repo (*very expensive indeed* !) in the middle of the production peak traffic, causing a global outage. Even tough the rule was applied, it did not take into consideration other factors and most importantly cannot self-evolve based on its own failings.",
      "parentUuid": "599009bb_118670cd",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bfcb888_1538a23c",
        "filename": "MVP.md",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-11T09:42:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c70991f7_c54f02db",
      "revId": "9f7c08c4834d2c655595cb588a72a46675686a2a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": []
}